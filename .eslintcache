[{"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\index.js":"1","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\App.js":"2","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\reportWebVitals.js":"3","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\main\\index.js":"4","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\upload\\index.js":"5","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\product\\index.js":"6","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\config\\constants.js":"7"},{"size":593,"mtime":1611557112374,"results":"8","hashOfConfig":"9"},{"size":1236,"mtime":1611615372938,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2916,"mtime":1611711749070,"results":"12","hashOfConfig":"9"},{"size":3970,"mtime":1611706392673,"results":"13","hashOfConfig":"9"},{"size":2054,"mtime":1611713294984,"results":"14","hashOfConfig":"9"},{"size":49,"mtime":1611704722889,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10670ef",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\index.js",[],["32","33"],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\App.js",[],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\reportWebVitals.js",[],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\main\\index.js",["34","35"],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\upload\\index.js",["36","37"],"import {\r\n  Form,\r\n  Divider,\r\n  Input,\r\n  InputNumber,\r\n  Button,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction UploadPage() {\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const history = useHistory();\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(`${API_URL}/products`, {\r\n        name: values.name,\r\n        description: values.description,\r\n        seller: values.seller,\r\n        price: parseInt(values.price),\r\n        imageUrl: imageUrl,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n  const onChangeImage = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const response = info.file.response;\r\n      const imageUrl = response.imageUrl;\r\n      setImageUrl(imageUrl);\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label={<div className=\"upload-label\">상품 사진</div>}\r\n        >\r\n          <Upload\r\n            name=\"image\"\r\n            action={`${API_URL}/image`}\r\n            listType=\"picture\"\r\n            showUploadList={false}\r\n            onChange={onChangeImage}\r\n          >\r\n            {imageUrl ? (\r\n              <img id=\"upload-img\" src={`${API_URL}/${imageUrl}`} />\r\n            ) : (\r\n              <div id=\"upload-img-placeholder\">\r\n                <img src=\"/images/icons/camera.png\" />\r\n                <span>이미지를 업로드해주세요.</span>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          label={<div className=\"upload-label\">판매자 명</div>}\r\n          name=\"seller\"\r\n          rules={[{ required: true, message: \"판매자 이름을 입력해주세요.\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"이름을 입력해주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"name\"\r\n          label={<div className=\"upload-label\">상품 이름</div>}\r\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"상품 이름을 입력해주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label={<div className=\"upload-label\">상품 가격</div>}\r\n          rules={[{ required: true, message: \"상품 가격을 입력해주세요\" }]}\r\n        >\r\n          <InputNumber\r\n            defaultValue={0}\r\n            className=\"upload-price\"\r\n            size=\"large\"\r\n            placeholder=\"상품 가격을 입력해주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className=\"upload-label\">상품 소개</div>}\r\n          rules={[{ required: true, message: \"상품 소개를 적어주세요.\" }]}\r\n        >\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            id=\"product-description\"\r\n            showCount\r\n            maxLength={300}\r\n            placeholder=\"상품 소개를 적어주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">\r\n            상품 등록하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\product\\index.js",["38","39","40","41"],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\config\\constants.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":61,"column":19,"nodeType":"48","endLine":64,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":71,"column":23,"nodeType":"48","endLine":74,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":61,"column":15,"nodeType":"48","endLine":61,"endColumn":69},{"ruleId":"46","severity":1,"message":"47","line":64,"column":17,"nodeType":"48","endLine":64,"endColumn":55},{"ruleId":"49","severity":1,"message":"50","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":26,"column":6,"nodeType":"55","endLine":26,"endColumn":8,"suggestions":"56"},{"ruleId":"46","severity":1,"message":"47","line":47,"column":9,"nodeType":"48","endLine":47,"endColumn":55},{"ruleId":"46","severity":1,"message":"47","line":50,"column":9,"nodeType":"48","endLine":50,"endColumn":47},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'responsiveArray' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [getProduct]",{"range":"62","text":"63"},[739,741],"[getProduct]"]