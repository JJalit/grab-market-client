[{"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\index.js":"1","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\App.js":"2","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\reportWebVitals.js":"3","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\main\\index.js":"4","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\upload\\index.js":"5","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\product\\index.js":"6","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\config\\constants.js":"7"},{"size":593,"mtime":1611557112374,"results":"8","hashOfConfig":"9"},{"size":1236,"mtime":1611615372938,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2916,"mtime":1611711749070,"results":"12","hashOfConfig":"9"},{"size":3970,"mtime":1611706392673,"results":"13","hashOfConfig":"9"},{"size":2054,"mtime":1611713294984,"results":"14","hashOfConfig":"9"},{"size":49,"mtime":1611704722889,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10670ef",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\index.js",[],["35","36"],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\App.js",[],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\reportWebVitals.js",[],"C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\main\\index.js",["37","38"],"import React from \"react\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { API_URL } from \"../config/constants.js\";\r\nimport { Carousel } from \"antd\";\r\ndayjs.extend(relativeTime);\r\n\r\nfunction MainPage() {\r\n  const [products, setProducts] = React.useState([]);\r\n  const [banners, setBanners] = React.useState([]);\r\n  React.useEffect(function () {\r\n    axios\r\n      .get(`${API_URL}/products`)\r\n      .then(function (result) {\r\n        const products = result.data.products;\r\n        setProducts(products);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"에러 발생 : \", error);\r\n      });\r\n\r\n    axios\r\n      .get(`${API_URL}/banners`)\r\n      .then((result) => {\r\n        const banners = result.data.banners;\r\n        setBanners(banners);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"에러 발생 : \", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel autoplay autoplaySpeed={3000}>\r\n        {banners.map((banner, index) => {\r\n          return (\r\n            <Link to={banner.href}>\r\n              <div id=\"banner\">\r\n                <img src={`${API_URL}/${banner.imageUrl}`} alt=\"배너이미지\" />\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </Carousel>\r\n      <h1 id=\"product-headline\">판매되는 상품들</h1>\r\n      <div id=\"product-list\">\r\n        {products.map(function (product, index) {\r\n          return (\r\n            <div className=\"product-card\">\r\n              {product.soldout === 1 && <div className=\"product-blur\" />}\r\n              <Link\r\n                style={{ color: \"inherit\" }}\r\n                className=\"product-link\"\r\n                to={`/products/${product.id}`}\r\n              >\r\n                <div>\r\n                  <img\r\n                    className=\"product-img\"\r\n                    src={`${API_URL}/${product.imageUrl}`}\r\n                  />\r\n                </div>\r\n                <div className=\"product-contents\">\r\n                  <span className=\"product-name\">{product.name}</span>\r\n                  <span className=\"product-price\">{product.price}원</span>\r\n                  <div className=\"product-footer\">\r\n                    <div className=\"product-seller\">\r\n                      <img\r\n                        className=\"product-avatar\"\r\n                        src=\"images/icons/avatar.png\"\r\n                      />\r\n                      <span>{product.seller}</span>\r\n                    </div>\r\n                    <span className=\"product-date\">\r\n                      {dayjs(product.createdAt).fromNow()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\upload\\index.js",["39","40"],"import {\r\n  Form,\r\n  Divider,\r\n  Input,\r\n  InputNumber,\r\n  Button,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction UploadPage() {\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const history = useHistory();\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(`${API_URL}/products`, {\r\n        name: values.name,\r\n        description: values.description,\r\n        seller: values.seller,\r\n        price: parseInt(values.price),\r\n        imageUrl: imageUrl,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n  const onChangeImage = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const response = info.file.response;\r\n      const imageUrl = response.imageUrl;\r\n      setImageUrl(imageUrl);\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label={<div className=\"upload-label\">상품 사진</div>}\r\n        >\r\n          <Upload\r\n            name=\"image\"\r\n            action={`${API_URL}/image`}\r\n            listType=\"picture\"\r\n            showUploadList={false}\r\n            onChange={onChangeImage}\r\n          >\r\n            {imageUrl ? (\r\n              <img id=\"upload-img\" src={`${API_URL}/${imageUrl}`} />\r\n            ) : (\r\n              <div id=\"upload-img-placeholder\">\r\n                <img src=\"/images/icons/camera.png\" />\r\n                <span>이미지를 업로드해주세요.</span>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          label={<div className=\"upload-label\">판매자 명</div>}\r\n          name=\"seller\"\r\n          rules={[{ required: true, message: \"판매자 이름을 입력해주세요.\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"이름을 입력해주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"name\"\r\n          label={<div className=\"upload-label\">상품 이름</div>}\r\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"상품 이름을 입력해주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label={<div className=\"upload-label\">상품 가격</div>}\r\n          rules={[{ required: true, message: \"상품 가격을 입력해주세요\" }]}\r\n        >\r\n          <InputNumber\r\n            defaultValue={0}\r\n            className=\"upload-price\"\r\n            size=\"large\"\r\n            placeholder=\"상품 가격을 입력해주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className=\"upload-label\">상품 소개</div>}\r\n          rules={[{ required: true, message: \"상품 소개를 적어주세요.\" }]}\r\n        >\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            id=\"product-description\"\r\n            showCount\r\n            maxLength={300}\r\n            placeholder=\"상품 소개를 적어주세요.\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">\r\n            상품 등록하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\product\\index.js",["41","42","43","44"],"import { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport dayjs from \"dayjs\";\r\nimport { Button, message } from \"antd\";\r\nimport { responsiveArray } from \"antd/lib/_util/responsiveObserve\";\r\nfunction ProductPage() {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  const getProduct = () => {\r\n    axios\r\n      .get(`${API_URL}/products/${id}`)\r\n      .then(function (result) {\r\n        setProduct(result.data.product);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(function () {\r\n    getProduct();\r\n  }, []);\r\n\r\n  if (product === null) {\r\n    return <h1>상품 정보를 받고 있습니다...</h1>;\r\n  }\r\n\r\n  const onClickPurchase = () => {\r\n    axios\r\n      .post(`${API_URL}/purchase/${id}`)\r\n      .then((result) => {\r\n        message.info(\"구매가 완료되었습니다.\");\r\n        getProduct();\r\n      })\r\n      .catch((error) => {\r\n        message.error(`에러가 발생했습니다. ${error.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"image-box\">\r\n        <img src={`${API_URL}/${product.imageUrl}`} />\r\n      </div>\r\n      <div id=\"profile-box\">\r\n        <img src=\"/images/icons/avatar.png\" />\r\n        <span>{product.seller}</span>\r\n      </div>\r\n      <div id=\"contents-box\">\r\n        <div id=\"name\">{product.name}</div>\r\n        <div id=\"price\">{product.price + \"원\"}</div>\r\n        <div id=\"createdAt\">\r\n          {dayjs(product.createdAt).format(\"YYYY년 MM월 DD일\")}\r\n        </div>\r\n        <Button\r\n          id=\"purchase-button\"\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          danger\r\n          onClick={onClickPurchase}\r\n          disabled={product.soldout === 1}\r\n        >\r\n          재빨리 구매하기\r\n        </Button>\r\n        <pre id=\"description\">{product.description}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","C:\\Users\\JAEHA\\Desktop\\재하\\WEB\\grab-market-web\\src\\config\\constants.js",[],["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":61,"column":19,"nodeType":"53","endLine":64,"endColumn":21},{"ruleId":"51","severity":1,"message":"52","line":71,"column":23,"nodeType":"53","endLine":74,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":61,"column":15,"nodeType":"53","endLine":61,"endColumn":69},{"ruleId":"51","severity":1,"message":"52","line":64,"column":17,"nodeType":"53","endLine":64,"endColumn":55},{"ruleId":"54","severity":1,"message":"55","line":8,"column":10,"nodeType":"56","messageId":"57","endLine":8,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":26,"column":6,"nodeType":"60","endLine":26,"endColumn":8,"suggestions":"61"},{"ruleId":"51","severity":1,"message":"52","line":47,"column":9,"nodeType":"53","endLine":47,"endColumn":55},{"ruleId":"51","severity":1,"message":"52","line":50,"column":9,"nodeType":"53","endLine":50,"endColumn":47},{"ruleId":"47","replacedBy":"62"},{"ruleId":"49","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'responsiveArray' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.","ArrayExpression",["66"],["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [getProduct]",{"range":"69","text":"70"},[739,741],"[getProduct]"]